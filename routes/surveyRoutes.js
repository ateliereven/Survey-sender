const mongoose = require('mongoose');
const requireLogin = require('../middlewares/requireLogin');
const requireCredits = require('../middlewares/requireCredits');
const Mailer = require('../services/Mailer');
const surveyTemplate = require('../services/emailTemplates/surveyTemplate')

const Survey = mongoose.model('surveys');

module.exports = app => {
    app.get('/api/surveys/thanks', (req, res) => { // a better way is to make a nice thanks component and route the user with react router
        res.send('Thanks for voting!')
    });

    app.post('/api/surveys', requireLogin/*making sure the user is logged in*/, requireCredits/*making sure the user has credits*/, async (req, res) => {

        const { title, subject, body, recipients } = req.body;

        const survey = new Survey({
            title, //ES6 syntax because the key and value are identical
            subject,
            body,
            recipients: recipients.split(',')/*remove commas and return an array of strings*/.map((email) => ({ email: email.trim() }))/*returns an array of objects*/,
            _user: req.user.id, //the current user's id, generated by mongoDB
            dateSent: Date.now()
        });
        try {
            const mailer = new Mailer(survey, surveyTemplate(survey));
            await mailer.send();
            await survey.save(); // save the survey to the database
            req.user.credits -= 1;
            const user = await req.user.save();  // save user with new credit balance
            res.send(user); // send back the user model to the auth reducer, to update the header component

        } catch (error) {
            //console.log(error);
            //console.log(error.response.body);
            res.status(402).send(error); //unprocessable
        }
    });
};